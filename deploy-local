#!/bin/bash

function usage {
    echo "Usage: $0 [-w] [-p] [-c]"
    echo ""
    echo "  -w  rebuild workspace (removes workspace data to force rebuild)"
    echo "  -c  cleanup Docker build cache and dangling images"
    exit
}

REBUILD_WORKSPACE=false
PROD_MODE=false
CLEANUP=false
export DOJO_PATH="./"
export DATA_PATH="./data"

while getopts "wphlc" opt; do
    case $opt in
    w)
        REBUILD_WORKSPACE=true
        ;;
    p)
        PROD_MODE=true
        ;;
    l)
        LOCAL=true
        ;;
    c)
        CLEANUP=true
        ;;
    h)
        usage
        ;;
    \?)
        echo "Invalid option: -$OPTARG" >&2
        usage
        ;;
    esac
done

if [ "$CLEANUP" = true ]; then
    echo "Cleaning up Docker build cache and dangling images..."
    docker exec dojo docker buildx prune -af
    docker exec dojo docker image prune -f
    echo "Cleanup complete"
fi

if [ "$REBUILD_WORKSPACE" = true ]; then
    echo "Rebuilding workspace"
    sleep 8
    # Build workspace with new dojo
    docker exec dojo bash -c "export DOJO_WORKSPACE=full && dojo compose --profile workspace up workspace-builder --force-recreate"

    # Restart any user containers
    docker exec dojo docker ps -q --filter "name=user_" | xargs -r docker exec dojo docker restart
fi



echo "Running in local mode"

export DOJO_HOST="dojo.local"
export FRONTEND_HOST="app.dojo.local"
export CORS_ORIGINS="https://${FRONTEND_HOST}"

docker build -t pwncollege/dojo .
docker stop dojo
docker rm dojo


GPU_ARGS=()
if [ -e /dev/nvidia0 ] && command -v nvidia-container-toolkit &>/dev/null; then
    GPU_ARGS=(--gpus all)
    echo "GPU support enabled"
else
    echo "GPU support disabled (nvidia-container-toolkit not installed)"
fi

docker run \
    --name dojo \
    --privileged \
    "${GPU_ARGS[@]}" \
    --device=/dev/kvm:/dev/kvm \
    -v "${DOJO_PATH}:/opt/pwn.college" \
    -v "${DATA_PATH}:/data" \
    -p 23:22 \
    -p 8888:80 \
    -p 8443:443 \
    -p 5900:5900 \
    -p 47984:47984 \
    -p 47989:47989 \
    -p 47990:47990 \
    -p 48010:48010 \
    -e INTERNET_FOR_ALL=True \
    -e DOJO_WORKSPACE=full \
    -e CORS_ORIGINS="${CORS_ORIGINS}" \
    -e DOJO_HOST="${DOJO_HOST}" \
    -e FRONTEND_HOST="${FRONTEND_HOST}" \
    -e LETSENCRYPT_HOST="${DOJO_HOST}" \
    -e VIRTUAL_HOST="${DOJO_HOST}" \
    -e SWAGGER_UI="true" \
    -d \
    pwncollege/dojo
